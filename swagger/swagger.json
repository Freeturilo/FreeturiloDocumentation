{
  "openapi": "3.0.1",
  "info": {
    "title": "FreeturiloWebApi",
    "version": "v1"
  },
  "paths": {
    "/app/state": {
      "get": {
        "tags": [
          "App"
        ],
        "summary": "Return current state of apllication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app/state/{state}": {
      "post": {
        "tags": [
          "App"
        ],
        "summary": "Sets state of applciation",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "description": "State to be set",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "State to be set",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app/notify/{number}": {
      "post": {
        "tags": [
          "App"
        ],
        "summary": "Sets admin's treshold",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Treshold to be set",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Treshold to be set",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app/notify": {
      "get": {
        "tags": [
          "App"
        ],
        "summary": "Returns admin's treshold",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/route": {
      "post": {
        "tags": [
          "Route"
        ],
        "summary": "Returns a route based on routeParameters",
        "requestBody": {
          "description": "Parameters of search",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteParametersDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteParametersDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteParametersDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FragmentRouteDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FragmentRouteDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FragmentRouteDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/station": {
      "get": {
        "tags": [
          "Station"
        ],
        "summary": "Returns all stations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StationDTO"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      },
      "put": {
        "tags": [
          "Station"
        ],
        "summary": "Updates all stations",
        "requestBody": {
          "description": "Collection of stations to be updated",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StationDTO"
                },
                "description": "Collection of stations to be updated",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StationDTO"
                },
                "description": "Collection of stations to be updated",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StationDTO"
                },
                "description": "Collection of stations to be updated",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/station/{id}": {
      "get": {
        "tags": [
          "Station"
        ],
        "summary": "Returns station of given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Station id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/station/{id}/report": {
      "post": {
        "tags": [
          "Station"
        ],
        "summary": "Reports station of given id as possibly broken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Station id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/station/{id}/broken": {
      "post": {
        "tags": [
          "Station"
        ],
        "summary": "Sets station of given id as broken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Station id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/station/{id}/working": {
      "post": {
        "tags": [
          "Station"
        ],
        "summary": "Sets station of given id as working",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Station id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Station id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Allows users to authenticate",
        "requestBody": {
          "description": "Email and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LocationDTO": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "Longitude of location",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of location",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "Name of location",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of location",
            "nullable": true
          },
          "bikeRacks": {
            "type": "integer",
            "description": "Number of racks on station",
            "format": "int32",
            "nullable": true
          },
          "bikes": {
            "type": "integer",
            "description": "Number of bikes on station",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouteParametersDTO": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/LocationDTO"
          },
          "end": {
            "$ref": "#/components/schemas/LocationDTO"
          },
          "stops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDTO"
            },
            "description": "Stops of route",
            "nullable": true
          },
          "criterion": {
            "type": "integer",
            "description": "Criterion of route",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Coords": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Bounds": {
        "type": "object",
        "properties": {
          "northeast": {
            "$ref": "#/components/schemas/Coords"
          },
          "southwest": {
            "$ref": "#/components/schemas/Coords"
          }
        },
        "additionalProperties": false
      },
      "TextValue": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Polyline": {
        "type": "object",
        "properties": {
          "points": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Step": {
        "type": "object",
        "properties": {
          "distance": {
            "$ref": "#/components/schemas/TextValue"
          },
          "duration": {
            "$ref": "#/components/schemas/TextValue"
          },
          "end_location": {
            "$ref": "#/components/schemas/Coords"
          },
          "start_location": {
            "$ref": "#/components/schemas/Coords"
          },
          "html_instructions": {
            "type": "string",
            "nullable": true
          },
          "travel_mode": {
            "type": "string",
            "nullable": true
          },
          "polyline": {
            "$ref": "#/components/schemas/Polyline"
          }
        },
        "additionalProperties": false
      },
      "ViaWaypoint": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Coords"
          },
          "step_index": {
            "type": "integer",
            "format": "int32"
          },
          "step_interpolation": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Leg": {
        "type": "object",
        "properties": {
          "distance": {
            "$ref": "#/components/schemas/TextValue"
          },
          "duration": {
            "$ref": "#/components/schemas/TextValue"
          },
          "end_address": {
            "type": "string",
            "nullable": true
          },
          "end_location": {
            "$ref": "#/components/schemas/Coords"
          },
          "start_address": {
            "type": "string",
            "nullable": true
          },
          "start_location": {
            "$ref": "#/components/schemas/Coords"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step"
            },
            "nullable": true
          },
          "traffic_speed_entry": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "via_waypoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViaWaypoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Route": {
        "type": "object",
        "properties": {
          "bounds": {
            "$ref": "#/components/schemas/Bounds"
          },
          "copyrights": {
            "type": "string",
            "nullable": true
          },
          "legs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Leg"
            },
            "nullable": true
          },
          "overview_polyline": {
            "$ref": "#/components/schemas/Polyline"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "waypoint_order": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FragmentRouteDTO": {
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/RouteParametersDTO"
          },
          "cost": {
            "type": "number",
            "description": "Cost of route",
            "format": "double"
          },
          "time": {
            "type": "integer",
            "description": "Time of route",
            "format": "int32"
          },
          "waypoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDTO"
            },
            "description": "Waypoints of route",
            "nullable": true
          },
          "directionsRoute": {
            "$ref": "#/components/schemas/Route"
          }
        },
        "additionalProperties": false
      },
      "StationDTO": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "Longitude of location",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of location",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "Name of location",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of location",
            "nullable": true
          },
          "bikeRacks": {
            "type": "integer",
            "description": "Number of racks on station",
            "format": "int32",
            "nullable": true
          },
          "bikes": {
            "type": "integer",
            "description": "Number of bikes on station",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Station id",
            "format": "int32"
          },
          "state": {
            "type": "integer",
            "description": "Station state",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AuthDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email for authentication",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password for authentication",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}